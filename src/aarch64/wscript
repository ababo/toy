COMP_CXXS = {
    'gcc': 'aarch64-linux-gnu-g++',
    'clang': 'clang++'
}

CXX_FLAGS = []
CXX_COMP_FLAGS = {
    'gcc': [],
    'clang': ['-target', 'aarch64']
}

AS = 'aarch64-linux-gnu-as'
AS_FLAGS = []

LD_FLAGS = []
LD_COMP_FLAGS = {
    'gcc': [],
    'clang': ['-target', 'aarch64']
}


def configure(cnf):
    cnf.env.CXX = COMP_CXXS[cnf.env.comp]
    cnf.env.LD = cnf.env.CXX
    cnf.env.AS = AS

    cnf.env.append_value('CXXFLAGS', CXX_FLAGS)
    cnf.env.append_value('CXXFLAGS', CXX_COMP_FLAGS[cnf.env.comp])

    cnf.env.append_value('ASFLAGS', AS_FLAGS)

    cnf.env.append_value('LDFLAGS', LD_FLAGS)
    cnf.env.append_value('LDFLAGS', LD_COMP_FLAGS[cnf.env.comp])


def build(bld):
    s_objs = bld.objects(source=bld.path.ant_glob('**/*.s'))
    cc_objs = bld.objects(source=bld.path.ant_glob('**/*.cc'))


def run(run):
    pass
